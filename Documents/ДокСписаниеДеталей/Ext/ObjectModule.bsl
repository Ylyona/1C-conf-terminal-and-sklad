
Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ДвижениеОсновныхДеталей
	Движения.ДвижениеОсновныхДеталей.Записывать = Истина;
	Для Каждого ТекСтрокаОсновныеДетали Из ОсновныеДетали Цикл
		Движение = Движения.ДвижениеОсновныхДеталей.Добавить();
		Движение.Период = Дата;
		Движение.Деталь = ТекСтрокаОсновныеДетали.ДетальПриемНаСкл;
		Движение.Статус = Перечисления.СтатусДетали.Списано;
		Движение.Комментарий = ТекСтрокаОсновныеДетали.КомментарийТЧ;
		Если ИсточникПоступленияНаСклад = Перечисления.СтатусДетали.ВЗапас Или ИсточникПоступленияНаСклад = Перечисления.СтатусДетали.Используется Тогда
			Движение.Исполнитель = Менеджер;
		ИначеЕсли ИсточникПоступленияНаСклад = Перечисления.СтатусДетали.НаРемонте Тогда 
			Движение.Исполнитель = СервисныйПункт;
		КонецЕсли;
		ОбъектДеталь = ТекСтрокаОсновныеДетали.ДетальПриемНаСкл.ПолучитьОбъект();
		ОбъектДеталь.ПометкаУдаления = Истина;
		ОбъектДеталь.Записать();
	КонецЦикла;
	
	Если ИсточникПоступленияНаСклад = Перечисления.СтатусДетали.Используется тогда
	// регистр Используется Расход
		Движения.Используется.Записывать = Истина;
		Для Каждого ТекСтрокаРасходныеДетали Из РасходныеДетали Цикл
			Движение = Движения.Используется.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.ДетальРасх = ТекСтрокаРасходныеДетали.ДетальРасхСпис;
			Движение.ТерминалРасх = Терминал;
			Движение.КоличествоРасх = ТекСтрокаРасходныеДетали.КоличествоРасхСпис;
			Движение.ИсполнительРасхИсп = Менеджер;
			Движение.КомментарийРасхИсп = ТекСтрокаРасходныеДетали.НеисправностьРасхСпис;
		КонецЦикла;

	ИначеЕсли ИсточникПоступленияНаСклад = Перечисления.СтатусДетали.НаРемонте тогда
	// регистр НаРемонт Расход
		Движения.НаРемонт.Записывать = Истина;
		Для Каждого ТекСтрокаРасходныеДетали Из РасходныеДетали Цикл
			Движение = Движения.НаРемонт.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.ДетальРасхНаРем = ТекСтрокаРасходныеДетали.ДетальРасхСпис;
			Движение.СервисныйПунктРасх = СервисныйПункт;
			Движение.КоличествоРасхНаСклад = ТекСтрокаРасходныеДетали.КоличествоРасхСпис;
			Движение.ИсполнительРасхНаСклад = СервисныйПункт;
			Движение.КомментарийРасхНаСклад = ТекСтрокаРасходныеДетали.НеисправностьРасхСпис;
		КонецЦикла;

	ИначеЕсли ИсточникПоступленияНаСклад = Перечисления.СтатусДетали.Неисправно тогда
	// регистр Неисправно Расход
		Движения.Неисправно.Записывать = Истина;
		Для Каждого ТекСтрокаРасходныеДетали Из РасходныеДетали Цикл
			Движение = Движения.Неисправно.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.ДетальРасхНаРем = ТекСтрокаРасходныеДетали.ДетальРасхСпис;
			Движение.КоличествоРасхНаСклад = ТекСтрокаРасходныеДетали.КоличествоРасхСпис;
			Движение.КомментарийРасхНаСклад = ТекСтрокаРасходныеДетали.НеисправностьРасхСпис;
		КонецЦикла;
	КонецЕсли;


	// регистр Списано Приход
	Движения.Списано.Записывать = Истина;
	Для Каждого ТекСтрокаРасходныеДетали Из РасходныеДетали Цикл
		Движение = Движения.Списано.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.ДетальРасхНаРем = ТекСтрокаРасходныеДетали.ДетальРасхСпис;
		Движение.КоличествоРасхНаСклад = ТекСтрокаРасходныеДетали.КоличествоРасхСпис;
		Движение.ИсполнительРасхНаСклад = Менеджер;
		Движение.КомментарийРасхНаСклад = ТекСтрокаРасходныеДетали.НеисправностьРасхСпис;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
