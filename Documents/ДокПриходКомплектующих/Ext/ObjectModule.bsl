
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если документ проводится повторно или основная деталь прописанная в документе уже есть на учете
	//данный документ не должен проводится
	Если ЭтотОбъект.Проведен И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//Документ проводится второй раз подряд, это недопустимо
		Отказ = Истина;
		Сообщить("Документ уже был проведен, сначала отмените проведение");
	//Если документ не проводится второй раз подряд тогда необходимо проанализироватб детали котороый прописаны в документе
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	    //Цикл по табличной части основых деталей
		Для Каждого ТекСтрокаОсновныеДетали Из ОсновныеДетали Цикл
			//Запрос на получение деталей из справочника основых средств подходящих по наименованию и сирийнику
			Запрос = Новый Запрос("ВЫБРАТЬ
				|	ОсновныеСредства.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.ОсновныеСредства КАК ОсновныеСредства
				|ГДЕ
				|	ОсновныеСредства.Наименование = &Наименование
				|	И ОсновныеСредства.СерийныйНомерСправочник = &СерийныйНомерСправочник");
			//Запоминаем выбраное наименование из табличной части и серийный номер	
			НаименованиеДетали = ТекСтрокаОсновныеДетали.Деталь.Наименование;
			СерийныйНомерДетали = ТекСтрокаОсновныеДетали.СерийныйНомер;
			//Уточняем запрос
			Запрос.УстановитьПараметр("Наименование", НаименованиеДетали); 
			Запрос.УстановитьПараметр("СерийныйНомерСправочник", СерийныйНомерДетали);
			//Выполняем запрос в соответствии с выбранной деталью из табличной части
			РезультатЗапроса = Запрос.Выполнить();
			//Если в справочнике основных средств уже есть деталь подходящая по наименованию и серийному номеру
			Если РезультатЗапроса.Выбрать().Количество()>0 тогда
				//Значит данный документ проводить нельзя и необходимо сообщить пользователю о том какая
				//деталь проводится повторно
				Отказ = истина;
				Сообщить("Деталь "+НаименованиеДетали+" с номером "+СерийныйНомерДетали+" уже существует, строка "+ТекСтрокаОсновныеДетали.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Движения в регистре сведений будут записываться автоматически
	Движения.ДвижениеОсновныхДеталей.Записывать = Истина;
	//запускаем цикл по табличной части документа
	Для Каждого ТекСтрокаОсновныеДетали Из ОсновныеДетали Цикл
		//Создание новых элементов справочника основные детали
		//выясняем есть ли подходящая группа в справочнике основные детали
		группа = Справочники.ОсновныеСредства.НайтиПоНаименованию(ТекСтрокаОсновныеДетали.Деталь.Родитель);
		//Если подходящей группы нет создаем её
		Если группа.Пустая() тогда
			Группа = Справочники.ОсновныеСредства.СоздатьГруппу();
			Группа.Наименование = ТекСтрокаОсновныеДетали.Деталь.Родитель;
			Группа.Записать();
		КонецЕсли;
		//Создаем в необходимой группе необходимый элемент справочника
		НовыйОснЭлемент = Справочники.ОсновныеСредства.СоздатьЭлемент();
		//Заполняем его реквизиты
		НовыйОснЭлемент.Родитель = Группа.Ссылка;
		НовыйОснЭлемент.СерийныйНомерСправочник =ТекСтрокаОсновныеДетали.СерийныйНомер;
		НовыйОснЭлемент.Комплектующее = ТекСтрокаОсновныеДетали.Деталь;
		НовыйОснЭлемент.Наименование = ТекСтрокаОсновныеДетали.Деталь.Наименование;
		//Сохраняем результат
		НовыйОснЭлемент.Записать();
		//Создаем необходимую запись в регистре сведений
		Движение = Движения.ДвижениеОсновныхДеталей.Добавить();
		Движение.Период = Дата;
		Движение.Деталь = НовыйОснЭлемент.Ссылка;
		Движение.Статус = Перечисления.СтатусДетали.НаСкладе;
		Движение.Исполнитель = Поставщик;
		Движение.Комментарий = Комментарий;
	КонецЦикла;

	// регистр НаСклад Приход
	Движения.НаСклад.Записывать = Истина;
	Для Каждого ТекСтрокаРасходныеДетали Из РасходныеДетали Цикл
		Движение = Движения.НаСклад.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.ДетальРасхНаСклад = ТекСтрокаРасходныеДетали.Деталь;
		Движение.КоличествоРасхНаСклад = ТекСтрокаРасходныеДетали.Количество;
		//Движение.ИсполнительРасхНаСклад = Поставщик;
		Движение.КомментарийРасхНаСклад = Комментарий;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	КонецПроцедуры

//Левая какая-то процедура заполнения (скорее всего доступна из справочника комплектующие)
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Комплектующие") Тогда
		// Заполнение шапки
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

//Процедура удаления элементов справочника основные детали
Процедура УдалитьЭлементСправочник()
	//Получаем данные из регистра сведений
	НаборЗаписей = РегистрыСведений.ДвижениеОсновныхДеталей.СоздатьНаборЗаписей();
	//Оставляем только те, что соответствуют этому документу
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	//Сохраняем результат
	НаборЗаписей.Прочитать();
	//Анализируем каждую полученную запись
	Для Каждого Запись Из НаборЗаписей Цикл
		//Узнаем какая деталь записана в регистре, получаем её объект и удаляем его из справочника
		Запись.Деталь.ПолучитьОбъект().Удалить();	
	КонецЦикла;	

КонецПроцедуры


Процедура ОбработкаУдаленияПроведения(Отказ)
	//При отмене проведения удаляются данные из регистра сведений поэтому необходимо удалять элементы из справочника основные средства
	УдалитьЭлементСправочник();	 
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	//Если удаляемый документ проведен, значит надо удалить элементы справочника основные средства
	Если ЭтотОбъект.Проведен Тогда
		УдалитьЭлементСправочник();
	КонецЕсли;
КонецПроцедуры


