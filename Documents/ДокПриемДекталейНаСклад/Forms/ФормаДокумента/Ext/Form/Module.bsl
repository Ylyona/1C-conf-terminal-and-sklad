
#Область ПроцедурыФормы

	//Проверяем что выбрано в статусе и отображаем нужные элементы, не нужные не отображаем и очищаем
	&НаКлиенте
	Процедура ПодготовкаФормы()
		//Получаем нужные значения перечисления с сервера, что бы понять что имено мы выбрали в источнике
		ПеречислВЗ = ПолучитьПеречислениеВЗапас();
		ПеречислНР = ПолучитьПеречислениеНаРемонте();
		ПеречислИсп = ПолучитьПеречислениеИспользуется();

		Если Объект.ИсточникПоступленияНаСклад = ПеречислВЗ тогда
		
			Элементы.Менеджер.Заголовок = Элементы.Менеджер.Имя;
			Элементы.Менеджер.Видимость = Истина;
			
			Объект.СервисныйПункт = ПолучитьПустуюСсылкуКонтрагента();
			Элементы.СервисныйПункт.Видимость = Ложь;
			
			Объект.Терминал = ПолучитьПустуюСсылкуТерминала();
			Элементы.Терминал.Видимость = Ложь;
			
			Элементы.ОсновныеДетали1.Обновить();
			Элементы.ОсновныеДетали1СтоимостьРемонта.Видимость = ложь;
			Объект.ИтоговаяСтоимость = 0;	
			Элементы.ИтоговаяСтоимость.Видимость = Ложь;
			Элементы.РасходныеДетали1Цена.Видимость = Ложь;
			Элементы.РасходныеДетали1Сумма.Видимость = Ложь;
			Элементы.ОсновныеДетали1Неисправность.Видимость = ложь;
			Элементы.РасходныеДетали1Неисправность.Видимость = ложь;
		
		ИначеЕсли Объект.ИсточникПоступленияНаСклад = ПеречислИсп тогда
			
			Элементы.Терминал.Видимость = Истина;
			
			Объект.СервисныйПункт = ПолучитьПустуюСсылкуКонтрагента();
			Элементы.СервисныйПункт.Видимость = Ложь;
			
			Элементы.ОсновныеДетали1.Обновить();
			Элементы.ОсновныеДетали1СтоимостьРемонта.Видимость = ложь;
			Объект.ИтоговаяСтоимость = 0;	
			Элементы.ИтоговаяСтоимость.Видимость = Ложь;
			Элементы.РасходныеДетали1Цена.Видимость = Ложь;
			Элементы.РасходныеДетали1Сумма.Видимость = Ложь;
			Элементы.ОсновныеДетали1Неисправность.Видимость = ложь;
			Элементы.РасходныеДетали1Неисправность.Видимость = ложь;
			
			Элементы.Менеджер.Заголовок = "Исполнитель";
			Элементы.Менеджер.Видимость = Истина;
			
		ИначеЕсли Объект.ИсточникПоступленияНаСклад = ПеречислНР тогда
			
			Элементы.СервисныйПункт.Видимость = Истина;
			
			Элементы.ОсновныеДетали1.Обновить();
			Элементы.ОсновныеДетали1СтоимостьРемонта.Видимость = Истина;
			Объект.ИтоговаяСтоимость = 0;	
			Элементы.ИтоговаяСтоимость.Видимость = Истина;
			
			Элементы.РасходныеДетали1.Обновить();
			Элементы.РасходныеДетали1Цена.Видимость = Истина;
			Элементы.РасходныеДетали1Сумма.Видимость = Истина;
			Объект.ИтоговаяСтоимость = 0;	
			Элементы.ИтоговаяСтоимость.Видимость = Истина;
			Элементы.ОсновныеДетали1Неисправность.Видимость = истина;
			Элементы.РасходныеДетали1Неисправность.Видимость = истина;
					
			Объект.Терминал = ПолучитьПустуюСсылкуТерминала();
			Элементы.Терминал.Видимость = Ложь;
			
			Объект.Менеджер = ПолучитьПустуюСсылкуМенеджера();
			Элементы.Менеджер.Видимость = Ложь;		
		 	
		ИначеЕсли Объект.ИсточникПоступленияНаСклад.Пустая() тогда
			
			Элементы.ОсновныеДетали1.Обновить();
			Элементы.ОсновныеДетали1СтоимостьРемонта.Видимость = ложь;
			
			Объект.Терминал = ПолучитьПустуюСсылкуТерминала();
			Элементы.Терминал.Видимость = Ложь;
			
			Объект.Менеджер = ПолучитьПустуюСсылкуМенеджера();
			Элементы.Менеджер.Видимость = Ложь;
			
			Объект.СервисныйПункт = ПолучитьПустуюСсылкуКонтрагента();
			Элементы.СервисныйПункт.Видимость = Ложь;
			Объект.ИтоговаяСтоимость = 0;	
			Элементы.ИтоговаяСтоимость.Видимость = Ложь;
			Элементы.РасходныеДетали1Цена.Видимость = Ложь;
			Элементы.РасходныеДетали1Сумма.Видимость = Ложь;
			Элементы.ОсновныеДетали1Неисправность.Видимость = ложь;
			Элементы.РасходныеДетали1Неисправность.Видимость = ложь;
			
		КонецЕсли;
	КонецПроцедуры

	//Если при открытии формы источник детали уже указан меняем форму
	&НаКлиенте
	Процедура ПриОткрытии(Отказ)
		Объект.Дата = ТекущаяДата();
		ПодготовкаФормы();
		РасчетСтоимостиЗаРемонт();
	КонецПроцедуры

	&НаКлиенте
	Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		Если  Элементы.Менеджер.Видимость = Истина и Объект.Менеджер.Пустая() и Элементы.Терминал.Видимость = ложь тогда
			Отказ = истина;
			Сообщить("Укажите менеджера!");
		ИначеЕсли (Элементы.Терминал.Видимость = Истина или Элементы.Менеджер.Видимость = Истина) и (Объект.Терминал.Пустая() или Объект.Менеджер.Пустая()) тогда
			Отказ = истина;
			Сообщить("Укажите Менеджера и/или Терминал!");
	 	ИначеЕсли Элементы.СервисныйПункт.Видимость = Истина и Объект.СервисныйПункт.Пустая() тогда
			Отказ = истина;
			Сообщить("Укажите Сервисный пункт!");
		Иначе 
			Отказ = ложь;
		КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыРеквизитовФормы

	//Меняем форму в соответствии с изменившимся статусом
	&НаКлиенте
	Процедура ИсточникПоступленияНаСкладПриИзменении(Элемент)
		ПодготовкаФормы();
	КонецПроцедуры

	&НаКлиенте
	Процедура РасчетСтоимостиЗаРемонт()
		Объект.ИтоговаяСтоимость = Объект.РасходныеДетали.Итог("Сумма") + Объект.ОсновныеДетали.Итог("СтоимостьРемонта");
	КонецПроцедуры

#КонецОбласти

#Область ПроцедурыТабличнойЧастиРасходныеДетали
	
	&НаКлиенте
	Процедура РасходныеДетали1ДетальПриИзменении(Элемент)
		ТД = Элементы.РасходныеДетали1.ТекущиеДанные;
		Источник = Объект.ИсточникПоступленияНаСклад;
		Если не Объект.СервисныйПункт.Пустая() или не Объект.Менеджер.Пустая() или не Объект.Терминал.Пустая() тогда
			Если Источник = ПолучитьПеречислениеНаРемонте() тогда
				ЗначИзмер = Объект.СервисныйПункт;
			ИначеЕсли Источник = ПолучитьПеречислениеВЗапас() тогда
				ЗначИзмер = Объект.Менеджер;
			ИначеЕсли Источник = ПолучитьПеречислениеИспользуется() тогда
				ЗначИзмер = Объект.Терминал;
			КонецЕсли;
			ТД.КоличествоДоступно = ПолучитьКоличествоДеталей(Объект.Дата,Источник,ТД.Деталь,ЗначИзмер);
		Иначе
			Сообщить("Не верно заполнены данные!!!");
		КонецЕсли;
		Коммент = ПолучитьНеиспрРасхДеталей(Объект.Дата, ТД.Деталь);
		ТД.Неисправность = Коммент;
	КонецПроцедуры

	&НаКлиенте
	Процедура РасходныеДетали1КоличествоПриИзменении(Элемент)
		ТД1 = Элементы.РасходныеДетали1.ТекущиеДанные;
		ОбщееКоличествоОдинаковыхРасходныхДеталей = ТД1.Количество;
		Ошибка = Ложь;
		Если ТД1.КоличествоДоступно < ТД1.Количество тогда
			ТД1.Количество = 0;
			Сообщить("Данного количества детали "+ТД1.Деталь+" нет в наличии");
			Ошибка = Истина;
		КонецЕсли;
		Если Ошибка = Ложь Тогда
			Для Индекс = 0 По Объект.РасходныеДетали.Количество()-2 Цикл
				Если ТД1.Деталь = Объект.РасходныеДетали.Получить(Индекс).Деталь Тогда
					ОбщееКоличествоОдинаковыхРасходныхДеталей = ОбщееКоличествоОдинаковыхРасходныхДеталей + Объект.РасходныеДетали.Получить(Индекс).Количество;
					Если ТД1.КоличествоДоступно < ОбщееКоличествоОдинаковыхРасходныхДеталей Тогда
						ТД1.Количество = 0;
						Сообщить("Данного количества детали "+ТД1.Деталь+" нет в наличии, пороверьте предыдущие строки");
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ТД = Элементы.РасходныеДетали1.ТекущиеДанные;
		ТД.Сумма = ТД.Количество*ТД.Цена;
		РасчетСтоимостиЗаРемонт();
	КонецПроцедуры

	&НаКлиенте
	Процедура РасходныеДетали1ЦенаПриИзменении(Элемент)
		ТД = Элементы.РасходныеДетали1.ТекущиеДанные;
		ТД.Сумма = ТД.Количество*ТД.Цена;
		РасчетСтоимостиЗаРемонт();
	КонецПроцедуры

	&НаКлиенте
	Процедура РасходныеДетали1ДетальНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ложь;
		Источник = Объект.ИсточникПоступленияНаСклад;
		Если не Объект.СервисныйПункт.Пустая() или не Объект.Менеджер.Пустая() или не Объект.Терминал.Пустая() тогда
			Если Источник = ПолучитьПеречислениеНаРемонте() тогда
				ДанныеВыбора = ПолучениеДеталейИзРегистровНакопления(Источник, Объект.СервисныйПункт);
			ИначеЕсли Источник = ПолучитьПеречислениеВЗапас() тогда
				ДанныеВыбора = ПолучениеДеталейИзРегистровНакопления(Источник, Объект.Менеджер);
			ИначеЕсли Источник = ПолучитьПеречислениеИспользуется() тогда
				ДанныеВыбора = ПолучениеДеталейИзРегистровНакопления(Источник, Объект.Терминал);
			КонецЕсли;
		Иначе
			Сообщить("Не верно заполнены данные!!!");
		КонецЕсли;
	КонецПроцедуры

	&НаКлиенте
	Процедура РасходныеДетали1СуммаПриИзменении(Элемент)
		ТД = Элементы.РасходныеДетали1.ТекущиеДанные;
		ТД.Сумма = ТД.Количество*ТД.Цена;
		РасчетСтоимостиЗаРемонт();
	КонецПроцедуры

	&НаКлиенте
	Процедура РасходныеДетали1ПослеУдаления(Элемент)
		РасчетСтоимостиЗаРемонт();
	КонецПроцедуры

#КонецОбласти

#Область ПроцедурыТабличнойЧастиОсновныеДетали

	&НаКлиенте
	Процедура ОсновныеДетали1ДетальПриемНаСклНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ложь;
		
		Источник = Объект.ИсточникПоступленияНаСклад;
		Если не Объект.СервисныйПункт.Пустая() или не Объект.Менеджер.Пустая() или не Объект.Терминал.Пустая() тогда
			Если Источник = ПолучитьПеречислениеНаРемонте() тогда
				ДанныеВыбора = ФункцииДеталей.ПолучениеОсновныхДеталей(Источник, "СервисТочка", Объект.СервисныйПункт);
			ИначеЕсли Источник = ПолучитьПеречислениеВЗапас() тогда
				ДанныеВыбора = ФункцииДеталей.ПолучениеОсновныхДеталей(Источник, "Менеджер", Объект.Менеджер);
			ИначеЕсли Источник = ПолучитьПеречислениеИспользуется() тогда
				ДанныеВыбора = ФункцииДеталей.ПолучениеОсновныхДеталей(Источник, "Терминал", Объект.Терминал);
			КонецЕсли;
		Иначе
			Сообщить("Не верно заполнены данные!!!");
		КонецЕсли;
	КонецПроцедуры

	&НаКлиенте
	Процедура ОсновныеДетали1СтоимостьРемонтаПриИзменении(Элемент)
		РасчетСтоимостиЗаРемонт();
	КонецПроцедуры

	&НаКлиенте
	Процедура ОсновныеДетали1ПослеУдаления(Элемент)
		РасчетСтоимостиЗаРемонт();
	КонецПроцедуры

	&НаКлиенте
	Процедура ОсновныеДетали1ДетальПриемНаСклПриИзменении(Элемент)
		ТД = Элементы.ОсновныеДетали1.ТекущиеДанные;
		Для Индекс = 0 По Объект.ОсновныеДетали.Количество()-2 Цикл
			Если ТД.ДетальПриемНаСкл = Объект.ОсновныеДетали.Получить(Индекс).ДетальПриемНаСкл Тогда
				ТД.ДетальПриемНаСкл = ФункцииДеталей.ПолучениеПустойСсылкиСправочникаОсновныеСредства();
				Сообщить("Основная деталь выбрана повторно");
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ТД.Неисправность = ФункцииДеталей.ПолучениеНеисправностиОсновнойДетали(Объект.Дата, ТД.ДетальПриемНаСкл);
	КонецПроцедуры

#КонецОбласти

#Область НужноПеренести

	//Получить неисправность основных деталей
	//&НаСервере
	//Функция ПолучитьНеиспрОснДеталей(Дата, Деталь)
	//	Отбор = новый структура;
	//	Отбор.Вставить("Деталь", Деталь);
	//	Данные = РегистрыСведений.ДвижениеОсновныхДеталей.СрезПоследних(Дата, Отбор);
	//	Комментарий = Данные.ВыгрузитьКолонку("Комментарий");
	//	Список = новый СписокЗначений;
	//	Список.ЗагрузитьЗначения(Комментарий);
	//	Возврат Список;
	//КонецФункции

	//Получить неисправность расходных деталей
	&НаСервере
	Функция ПолучитьНеиспрРасхДеталей(Дата, Деталь)
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Неисправно.КомментарийРасхНаСклад КАК КомментарийРасхНаСклад
		|ИЗ
		|	РегистрНакопления.Неисправно КАК Неисправно
		|ГДЕ
		|	Неисправно.Период < &Период
		|	И Неисправно.ДетальРасхНаРем = &ДетальРасхНаРем
		|УПОРЯДОЧИТЬ ПО
		|	Неисправно.Период");		
		Запрос.УстановитьПараметр("ДетальРасхНаРем", Деталь);
		Запрос.УстановитьПараметр("Период", Дата);
		Комментарий = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КомментарийРасхНаСклад");
		Список = Новый СписокЗначений;
		Список.ЗагрузитьЗначения(Комментарий);
		Возврат Список;
	КонецФункции

	//Следующие функции нужны для правильной отчистки полей которые должны быть не видему на форме
	&НаСервере
	Функция ПолучитьПустуюСсылкуКонтрагента()
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецФункции

	&НаСервере
	Функция ПолучитьПустуюСсылкуТерминала()
		Возврат Справочники.Терминалы.ПустаяСсылка();
	КонецФункции

	&НаСервере
	Функция ПолучитьПустуюСсылкуМенеджера()
		 Возврат Справочники.Менеджеры.ПустаяСсылка();
	КонецФункции

	//Следующие функции нужны что бы с сервера получать выбранные перечисления
	&НаСервере
	Функция ПолучитьПеречислениеВЗапас()
		Возврат Перечисления.СтатусДетали.ВЗапас;
	КонецФункции

	&НаСервере
	Функция ПолучитьПеречислениеИспользуется()
		Возврат Перечисления.СтатусДетали.Используется;
	КонецФункции

	&НаСервере
	Функция ПолучитьПеречислениеНаРемонте()
		Возврат Перечисления.СтатусДетали.НаРемонте;
	КонецФункции

	//Везде поменять слово ЗначениеРесурса на ЗначениеИзмерения!!!!!!!!!!!!!!
	&НаСервере
	Функция ПолучениеДеталейИзРегистровНакопления(Статус, ЗначениеРесурса)	
		Запрос = Новый Запрос;
		Если Статус = ПолучитьПеречислениеВЗапас() тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	ВЗапасОстатки.ДетальРасхЗапас КАК Деталь,
			|	ВЗапасОстатки.КоличествоРасхЗапасОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ВЗапас.Остатки КАК ВЗапасОстатки
			|ГДЕ
			|	ВЗапасОстатки.МенеджерРасхЗапас = &ЗначениеРесурса";
		ИначеЕсли Статус = ПолучитьПеречислениеИспользуется() тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	ИспользуетсяОстатки.ДетальРасх КАК Деталь,
			|	ИспользуетсяОстатки.КоличествоРасхОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.Используется.Остатки КАК ИспользуетсяОстатки
			|ГДЕ
			|	ИспользуетсяОстатки.ТерминалРасх = &ЗначениеРесурса";
		ИначеЕсли Статус = ПолучитьПеречислениеНаРемонте() тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	НаРемонтОстатки.ДетальРасхНаРем КАК Деталь,
			|	НаРемонтОстатки.КоличествоРасхНаСкладОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.НаРемонт.Остатки КАК НаРемонтОстатки
			|ГДЕ
			|	НаРемонтОстатки.СервисныйПунктРасх = &ЗначениеРесурса";
		КонецЕсли;
		Запрос.УстановитьПараметр("ЗначениеРесурса", ЗначениеРесурса);
		//Сохраняем результат запроса
		Результат = Запрос.Выполнить();
		//Преобразуем резултат в таблицу
		Таблица = Результат.Выгрузить();
		//Переводим таблицу в массив
		МассивДеталей = Таблица.ВыгрузитьКолонку("Деталь");
		МассивКоличествДеталей = Таблица.ВыгрузитьКолонку("Количество");
		//Создаём список значений
		Список = Новый СписокЗначений;
		//Загружаем список значений
		Если МассивДеталей.Количество()>0 Тогда
			Для ИндексМассива = 0 По МассивДеталей.Количество() - 1 Цикл
    	    	Список.Добавить(МассивДеталей[ИндексМассива],МассивДеталей[ИндексМассива].Наименование+", "+МассивКоличествДеталей[ИндексМассива]);
			КонецЦикла;
		Иначе
			Список.Добавить(Справочники.Комплектующие.ПустаяСсылка(),"Нет деталей");
		КонецЕсли;
		//Возвращаем список значений на клиент
		Возврат Список;
	КонецФункции

	&НаСервере
	Функция ПолучитьКоличествоДеталей(Дата, Статус, Деталь, ЗначениеИзмерения);
		Отбор = новый структура;
		Если Статус = ПолучитьПеречислениеВЗапас() тогда
			Отбор.Вставить("ДетальРасхЗапас", Деталь);
			Отбор.Вставить("МенеджерРасхЗапас", ЗначениеИзмерения);
			Данные = РегистрыНакопления.ВЗапас.Остатки(Дата, Отбор);
			Количество = Данные.Итог("КоличествоРасхЗапас");
		ИначеЕсли Статус = ПолучитьПеречислениеИспользуется() тогда
			Отбор.Вставить("ДетальРасх", Деталь);
			Отбор.Вставить("ТерминалРасх", ЗначениеИзмерения);
			Данные = РегистрыНакопления.Используется.Остатки(Дата,Отбор);
			Количество = Данные.Итог("КоличествоРасх");
		ИначеЕсли Статус = ПолучитьПеречислениеНаРемонте() тогда
			Отбор.Вставить("ДетальРасхНаРем", Деталь);
			Отбор.Вставить("СервисныйПунктРасх", ЗначениеИзмерения);
			Данные = РегистрыНакопления.НаРемонт.Остатки(Дата, Отбор);
			Количество = Данные.Итог("КоличествоРасхНаСклад");
		КонецЕсли;
		Возврат Количество;
	КонецФункции

#КонецОбласти