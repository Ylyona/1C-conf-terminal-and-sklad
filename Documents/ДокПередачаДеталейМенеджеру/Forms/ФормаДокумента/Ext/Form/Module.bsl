#Область ПроцедурыФормы

	//Проверяем что выбрано в статусе и отображаем нужные элементы, не нужные не отображаем и очищаем
	&НаКлиенте
	Процедура ПодготовкаФормы()
		//Получаем нужные значения перечисления с сервера, что бы понять что имено мы выбрали в источнике
		ПеречислВЗ = ПолучитьПеречислениеВЗапас();
		ПеречислИсп = ПолучитьПеречислениеИспользуется();
		ПеречислСкл = ПолучитьПеречислениеНаСклад();
	
		Если Объект.ИсточникПоступленияМенеджеру = ПеречислВЗ тогда
			
			Элементы.Менеджер.Видимость = Истина;
					
			Объект.Терминал = ПолучитьПустуюСсылкуТерминала();
			Элементы.Терминал.Видимость = Ложь;
			
		ИначеЕсли Объект.ИсточникПоступленияМенеджеру = ПеречислИсп тогда
					
			Элементы.Терминал.Видимость = Истина;
			
			Объект.Менеджер = ПолучитьПустуюСсылкуМенеджера();
			Элементы.Менеджер.Видимость = Ложь;
			
		ИначеЕсли Объект.ИсточникПоступленияМенеджеру = ПеречислСкл Или Объект.ИсточникПоступленияМенеджеру.Пустая() тогда
			
			Объект.Менеджер = ПолучитьПустуюСсылкуМенеджера();
			Элементы.Менеджер.Видимость = Ложь;
			
			Объект.Терминал = ПолучитьПустуюСсылкуТерминала();
			Элементы.Терминал.Видимость = Ложь;
				
		КонецЕсли;
	КонецПроцедуры

	//Если при открытии формы источник детали уже указан меняем форму
	&НаКлиенте
	Процедура ПриОткрытии(Отказ)
		Объект.Дата = ТекущаяДата();
		ПодготовкаФормы();
	КонецПроцедуры

	&НаКлиенте
	Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		Если  Элементы.Менеджер.Видимость = Истина и Объект.Менеджер.Пустая() и Элементы.Терминал.Видимость = ложь тогда
			Отказ = истина;
			Сообщить("Укажите менеджера!");
		ИначеЕсли (Элементы.Терминал.Видимость = Истина или Элементы.Менеджер.Видимость = Истина) и (Объект.Терминал.Пустая() или Объект.Менеджер.Пустая()) тогда
			Отказ = истина;
			Сообщить("Укажите Менеджера и/или Терминал!");
		Иначе 
			Отказ = ложь;
		КонецЕсли;

	КонецПроцедуры

#КонецОбласти

#Область ПроцедурыРеквизитовФормы

	//Меняем форму в соответствии с изменившимся статусом
	&НаКлиенте
	Процедура ИсточникПоступленияНаСкладПриИзменении(Элемент)
		ПодготовкаФормы();	
	КонецПроцедуры

#КонецОбласти

#Область ПроцедурыТабличнойЧастиРасходныеДетали

	&НаКлиенте
	Процедура РасходныеДеталиВЗапасДетальПередатьМенеджПриИзменении(Элемент)
		ТД = Элементы.РасходныеДеталиВЗапас.ТекущиеДанные;
		Источник = Объект.ИсточникПоступленияМенеджеру;
		Если Источник = ПолучитьПеречислениеНаСклад() или не Объект.Менеджер.Пустая() или не Объект.Терминал.Пустая() тогда
			Если Источник = ПолучитьПеречислениеНаСклад() тогда
				ЗначИзмер = "";
			ИначеЕсли Источник = ПолучитьПеречислениеВЗапас() тогда
				ЗначИзмер = Объект.Менеджер;
			ИначеЕсли Источник = ПолучитьПеречислениеИспользуется() тогда
				ЗначИзмер = Объект.Терминал;
			КонецЕсли;
			ТД.ДоступноКоличествоРасхДет = ПолучитьКоличествоДеталей(Объект.Дата,Источник,ТД.ДетальПередатьМенедж,ЗначИзмер);
		Иначе
			Сообщить("Не верно заполнены данные!!!");
		КонецЕсли;	
	КонецПроцедуры

	&НаКлиенте
	Процедура РасходныеДеталиВЗапасДетальПередатьМенеджНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ложь;
		Источник = Объект.ИсточникПоступленияМенеджеру;
		Если Источник = ПолучитьПеречислениеНаСклад() или не Объект.Менеджер.Пустая() или не Объект.Терминал.Пустая() тогда
			Если Источник = ПолучитьПеречислениеНаСклад() тогда
				ДанныеВыбора = ПолучитьРасходныеДеталиВНаличии(Источник, "");
			ИначеЕсли Источник = ПолучитьПеречислениеВЗапас() тогда
				ДанныеВыбора = ПолучитьРасходныеДеталиВНаличии(Источник, Объект.Менеджер);
			ИначеЕсли Источник = ПолучитьПеречислениеИспользуется() тогда
				ДанныеВыбора = ПолучитьРасходныеДеталиВНаличии(Источник, Объект.Терминал);
			КонецЕсли;
		Иначе
			Сообщить("Не верно заполнены данные!!!");
		КонецЕсли;
	КонецПроцедуры

	&НаКлиенте
	Процедура РасходныеДеталиВЗапасКоличествоРасхДетПриИзменении(Элемент)
		ТД1 = Элементы.РасходныеДеталиВЗапас.ТекущиеДанные;
		ОбщееКоличествоОдинаковыхРасходныхДеталей = ТД1.КоличествоПередатьРасхДет;
		Ошибка = Ложь;
		Если ТД1.ДоступноКоличествоРасхДет < ТД1.КоличествоПередатьРасхДет тогда
			ТД1.КоличествоПередатьРасхДет = 0;
			Сообщить("Данного количества детали "+ТД1.ДетальПередатьМенедж+" нет в наличии");
			Ошибка = Истина;
		КонецЕсли;
		Если Ошибка = Ложь Тогда
			Для Индекс = 0 По Объект.РасходныеДеталиВЗапас.Количество()-2 Цикл
				Если ТД1.ДетальПередатьМенедж = Объект.РасходныеДеталиВЗапас.Получить(Индекс).ДетальПередатьМенедж Тогда
					ОбщееКоличествоОдинаковыхРасходныхДеталей = ОбщееКоличествоОдинаковыхРасходныхДеталей + Объект.РасходныеДеталиВЗапас.Получить(Индекс).КоличествоПередатьРасхДет;
					Если ТД1.ДоступноКоличествоРасхДет < ОбщееКоличествоОдинаковыхРасходныхДеталей Тогда
						ТД1.КоличествоПередатьРасхДет = 0;
						Сообщить("Данного количества детали "+ТД1.ДетальПередатьМенедж+" нет в наличии, пороверьте предыдущие строки");
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецПроцедуры

#КонецОбласти

#Область ПроцедурыТабличнойЧастиОсновныеДетали

	&НаКлиенте
	Процедура ОсновныеДетали1ДетальПриемНаСклНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ложь;
		Источник = Объект.ИсточникПоступленияМенеджеру;
		Если Источник = ПолучитьПеречислениеНаСклад() или не Объект.Менеджер.Пустая() или не Объект.Терминал.Пустая() тогда
			Если Источник = ПолучитьПеречислениеНаСклад() тогда
				ДанныеВыбора = ФункцииДеталей.ПолучениеОсновныхДеталей(Источник);
			ИначеЕсли Источник = ПолучитьПеречислениеВЗапас() тогда
				ДанныеВыбора = ФункцииДеталей.ПолучениеОсновныхДеталей(Источник, "Менеджер", Объект.Менеджер);
			ИначеЕсли Источник = ПолучитьПеречислениеИспользуется() тогда
				ДанныеВыбора = ФункцииДеталей.ПолучениеОсновныхДеталей(Источник, "Терминал", Объект.Терминал);
			КонецЕсли;
		Иначе
			Сообщить("Не верно заполнены данные!!!");
		КонецЕсли;
	КонецПроцедуры

	&НаКлиенте
	Процедура ОсновныеДетали1ДетальПриемНаСклПриИзменении(Элемент)
		ТД = Элементы.ОсновныеДетали1.ТекущиеДанные;
		ТД1 = Элементы.ОсновныеДетали1.ТекущиеДанные;
		Для Индекс = 0 По Объект.ОсновныеДетали.Количество()-2 Цикл
			Если ТД.ДетальПередатьМенедж = Объект.ОсновныеДетали.Получить(Индекс).ДетальПередатьМенедж Тогда
				ТД.ДетальПередатьМенедж = получитьПустуюСсылкуОснДет();
				Сообщить("Основная деталь выбрана повторно");
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецПроцедуры

#КонецОбласти

#Область НеобходимоПеренести

	&НаСервере
	Функция получитьПустуюСсылкуОснДет();
		Возврат Справочники.ОсновныеСредства.ПустаяСсылка();
	КонецФункции

	//Следующие функции нужны для правильной отчистки полей которые должны быть не видему на форме
	&НаСервере
	Функция ПолучитьПустуюСсылкуТерминала()
		Возврат Справочники.Терминалы.ПустаяСсылка();
	КонецФункции

	&НаСервере
	Функция ПолучитьПустуюСсылкуМенеджера()
		Возврат Справочники.Менеджеры.ПустаяСсылка();
	КонецФункции

	//Следующие функции нужны что бы с сервера получать выбранные перечисления
	&НаСервере
	Функция ПолучитьПеречислениеВЗапас()
		Возврат Перечисления.СтатусДетали.ВЗапас;
	КонецФункции

	&НаСервере
	Функция ПолучитьПеречислениеИспользуется()
		Возврат Перечисления.СтатусДетали.Используется;
	КонецФункции

	&НаСервере
	функция ПолучитьПеречислениеНаСклад()
		Возврат Перечисления.СтатусДетали.НаСкладе;
	КонецФункции

	&НаСервере
	функция ПолучитьРасходныеДеталиВНаличии(Статус, ЗначениеРесурса)
		Запрос = Новый Запрос;
		Если Статус = ПолучитьПеречислениеВЗапас() тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	ВЗапасОстатки.ДетальРасхЗапас КАК Деталь,
			|	ВЗапасОстатки.КоличествоРасхЗапасОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ВЗапас.Остатки КАК ВЗапасОстатки
			|ГДЕ
			|	ВЗапасОстатки.МенеджерРасхЗапас = &ЗначениеРесурса";
			Запрос.УстановитьПараметр("ЗначениеРесурса", ЗначениеРесурса);			   
		ИначеЕсли Статус = ПолучитьПеречислениеИспользуется() тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	ИспользуетсяОстатки.ДетальРасх КАК Деталь,
			|	ИспользуетсяОстатки.КоличествоРасхОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.Используется.Остатки КАК ИспользуетсяОстатки
			|ГДЕ
			|	ИспользуетсяОстатки.ТерминалРасх = &ЗначениеРесурса";
			Запрос.УстановитьПараметр("ЗначениеРесурса", ЗначениеРесурса);
		ИначеЕсли Статус = ПолучитьПеречислениеНаСклад() тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	НаСкладОстатки.ДетальРасхНаСклад КАК Деталь,
			|	НаСкладОстатки.КоличествоРасхНаСкладОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.НаСклад.Остатки КАК НаСкладОстатки";
		КонецЕсли;

		//Сохраняем результат запроса
		Результат = Запрос.Выполнить();
		//Преобразуем резултат в таблицу
		Таблица = Результат.Выгрузить();
		//Переводим таблицу в массив
		МассивДеталей = Таблица.ВыгрузитьКолонку("Деталь");
		МассивКоличествДеталей = Таблица.ВыгрузитьКолонку("Количество");
		//Создаём список значений
		Список = Новый СписокЗначений;
		//Загружаем список значений
		Если МассивДеталей.Количество() > 0 Тогда 
			Для ИндексМассива = 0 По МассивДеталей.Количество() - 1 Цикл
	        	Список.Добавить(МассивДеталей[ИндексМассива],МассивДеталей[ИндексМассива].Наименование+", "+МассивКоличествДеталей[ИндексМассива]);
			КонецЦикла;
		Иначе
			Список.Добавить(Справочники.Комплектующие.ПустаяСсылка(), "Нет деталей");
		КонецЕсли;
		//Возвращаем список значений на клиент
		Возврат Список;
	КонецФункции

	&НаСервере
	Функция ПолучитьКоличествоДеталей(Дата, Статус, Деталь, ЗначениеИзмерения);
		Отбор = новый структура;
		Если Статус = ПолучитьПеречислениеВЗапас() тогда
			Отбор.Вставить("ДетальРасхЗапас", Деталь);
			Отбор.Вставить("МенеджерРасхЗапас", ЗначениеИзмерения);
			Данные = РегистрыНакопления.ВЗапас.Остатки(Дата, Отбор);
			Количество = Данные.Итог("КоличествоРасхЗапас");
		ИначеЕсли Статус = ПолучитьПеречислениеИспользуется() тогда
			Отбор.Вставить("ДетальРасх", Деталь);
			Отбор.Вставить("ТерминалРасх", ЗначениеИзмерения);
			Данные = РегистрыНакопления.Используется.Остатки(Дата, Отбор);
			Количество = Данные.Итог("КоличествоРасх");
		ИначеЕсли Статус = ПолучитьПеречислениеНаСклад() тогда
			Отбор.Вставить("ДетальРасхНаСклад", Деталь);
			Данные = РегистрыНакопления.НаСклад.Остатки(Дата, Отбор);
			Количество = Данные.Итог("КоличествоРасхНаСклад");
		КонецЕсли;
		Возврат Количество;
	КонецФункции

#КонецОбласти